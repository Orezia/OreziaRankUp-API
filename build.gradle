plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.checkerframework' version '0.6.3'
}

group 'fr.orezia.mc'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility(JavaVersion.VERSION_16)
    targetCompatibility(JavaVersion.VERSION_16)
    withSourcesJar()
    withJavadocJar()
}

def props = new Properties()
if (file(".env").exists())
    file(".env").withInputStream { props.load(it) }


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/Orezia/OreziaCore-API")
        credentials {
            username = System.getenv("GITHUB_ACTOR") ?: props.getProperty("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN") ?: props.getProperty("GITHUB_TOKEN")
        }
    }
    maven {
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
}

dependencies {
    api "fr.orezia.mc:oreziacore-api:1.0-SNAPSHOT"
    implementation 'org.checkerframework:checker:3.19.0'
    checkerFramework 'org.checkerframework:checker:3.19.0'
    checkerFramework 'org.checkerframework:checker-qual:3.19.0'
}

checkerFramework {
    checkers = [
            'org.checkerframework.common.returnsreceiver.ReturnsReceiverChecker',
            'org.checkerframework.checker.optional.OptionalChecker'
    ]
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Orezia/OreziaRankUp-api")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        //noinspection GroovyAssignabilityCheck
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
